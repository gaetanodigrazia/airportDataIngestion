services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper_airport_data
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    networks:
      - airport_data_network

  kafka1:
    image: wurstmeister/kafka:latest
    restart: "no"
    container_name: kafka1_airport_data
    links:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CREATE_TOPICS: "flights:3:1, airports:3:1:cleanup.policy=compact,retention.ms=259200000"
    networks:
      - airport_data_network

  kafka2:
    image: wurstmeister/kafka:latest
    restart: "no"
    container_name: kafka2_airport_data
    links:
      - zookeeper
    ports:
      - 9093:9093
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:29093,EXTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:29093,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CREATE_TOPICS: "flights:3:1, airports:3:1:cleanup.policy=compact,retention.ms=259200000"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    networks:
      - airport_data_network

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    container_name: kafdrop_airport_data
    environment:
      KAFKA_BROKERCONNECT: "kafka1:29092,kafka2:29093"
    ports:
      - 9000:9000
    depends_on:
      - kafka1
      - kafka2
    networks:
      - airport_data_network

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.3
    hostname: control-center
    container_name: control_center_airport_data
    depends_on:
      - kafka1
      - kafka2
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka1:29092,kafka2:29093"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
    networks:
      - airport_data_network

  dataIngestion:
    build:
      context: .  # Context della build (directory del Dockerfile)
      dockerfile: Dockerfile
    image: local/app:latest  # Nome locale dellâ€™immagine creata
    ports:
      - "8085:8085"
    env_file:
      - .env
    networks:
      - airport_data_network

networks:
  airport_data_network:
    driver: bridge

